{"version":3,"sources":["checkbox.js","control.js","image.js","datetime.js","select.js","init.js","initMultiple.js"],"names":[],"mappingsjXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"admin-default.js","sourcesContent":["$(function () {\n    $('.adminCheckboxRow').on('change', function(e) {\n        var $self = $(this),\n            $row = $self.closest('tr');\n\n        if($self.is(':checked')) {\n            $row.addClass('info');\n        } else {\n            $row.removeClass('info');\n        }\n    });\n\n    $('.adminCheckboxAll').on('change', function() {\n        var $self = $(this),\n            $checkboxes = $('.adminCheckboxRow');\n\n        if($self.is(':checked')) {\n            $checkboxes.not(':checked').each(function(i, a) {\n                this.checked = true;\n                $(this).trigger('change');\n            });\n        } else {\n            $checkboxes.filter(':checked').each(function(i, a) {\n                this.checked = false;\n                $(this).trigger('change');\n            });\n        }\n    });\n});","$(function () {\n    $(document).delegate('.btn-delete', 'click', function (e) {\n        e.preventDefault();\n        var form = $(this).closest('form');\n        bootbox.confirm(window.Admin.Settings.lang.table['delete-confirm'], function (result) {\n            if (result) {\n                form.submit();\n            }\n        });\n    });\n    bootbox.setDefaults('locale', window.Admin.Settings.locale);\n});","$(function () {\n    $(document).delegate('*[data-toggle=\"lightbox\"]', 'click', function (e) {\n        e.preventDefault();\n        $(this).ekkoLightbox({\n            always_show_close: false\n        });\n    });\n});","$(function () {\n    $('.input-date').each(function () {\n        var $self = $(this);\n        $self.datetimepicker({\n            locale: window.Admin.Settings.locale\n        }).trigger('dp.change').on('dp.change', function () {\n            $self.change();\n        });\n    });\n});","$(function () {\n    $('.input-select').each(function () {\n        var $self = $(this);\n\n        if ($self.data('select2')) {\n            return;\n        }\n\n        var options = $.extend({}, $self.data('widgetOptions') || {}),\n            customize = $self.data('widgetCustomizeOptions'),\n            isDynamic = $self.data('dynamic'),\n            dynOptions = $self.data('dynamicOptions'),\n            customizeDynOptions = $self.data('customizeDynamicOptions');\n\n        if ($self.hasClass('input-taggable')) {\n            options['tags'] = true;\n        }\n\n        // if data sources is dynamic\n        if (isDynamic) {\n            dynOptions = (function () {\n                var r = $.extend({}, {\n                    static: null,\n                    cache: true,\n                    perPage: 10,\n                    minInputLength: 2,\n                    itemsProperty: 'items',\n                    totalCountProperty: 'total_count',\n                    dependency: {},\n                    delay: 500,\n                    termParam: 'q',\n                    pageParam: 'page',\n                    params: null,\n                    value: null,\n                    findByIdUrl: null,\n                    idParam: 'id',\n                    idParamSep: ',',\n                    isItemTuple: false,\n                    prepareItems: function (e) {\n                        var items = e.items, item;\n\n                        for (var i = 0; i < items.length; i++) {\n                            e.item = items[i];\n                            e.itemIndex = i;\n                            items[i] = e.prepareItem(e);\n                        }\n\n                        items.filter(function (item) {\n                            return item && (item.id || item.children);\n                        });\n\n                        return items;\n                    },\n                    prepareItem: function (e) {\n                        return e.item;\n                    },\n                    prepareItemTuple: function (e) {\n                        var item = e.item, newItem = {\n                            id: item[0],\n                            text: item[1]\n                        };\n\n                        if (item.length == 3) {\n                            newItem.children = item[2]\n                        }\n\n                        return newItem;\n                    }\n                }, dynOptions), dep, k;\n\n                if (r.static && !$.isArray(r.static)) {\n                    r.static = eval(r.static);\n                }\n\n                if (r.dependency) {\n                    for (k in r.dependency) {\n                        if (/^\\d+$/.test(k)) {\n                            r.dependency[r.dependency[k]] = r.dependency[k];\n                            delete r.dependency[k];\n                        }\n                    }\n\n                    var d = {\n                        // query string map\n                        qs: {},\n                        // fields\n                        fields: {},\n                        // utils\n                        prepare: function (data) {\n                            var k, dep;\n\n                            for (k in this.qs) {\n                                data[k] = this.getQSValue(k);\n                            }\n\n                            for (k in this.fields) {\n                                data[k] = this.getFieldValue(k);\n                            }\n                        },\n                        getField: function (name) {\n                            return this.getFieldEl(this.fields[name])\n                        },\n                        getFieldEl: function (selector) {\n                            return $self.closest('form').find(selector)\n                        },\n                        getFieldValue: function (name) {\n                            return this.getField(name).val()\n                        },\n                        getFields: function () {\n                            var k, args, r = [];\n\n                            for (k in this.fields) {\n                                r[r.length] = this.getField(k)\n                            }\n\n                            return r;\n                        },\n                        getQSValue: function (name) {\n                            return $.url.param(name)\n                        },\n                        forEachFields: function (callback) {\n                            var fields = this.getFields(), i;\n                            for (i = 0; i < fields.length; i++) {\n                                callback(fields[i]);\n                            }\n                        }\n                    };\n\n                    for (k in r.dependency) {\n                        dep = r.dependency[k];\n\n                        if (dep[0] == ':') {\n                            // QUERY STRING\n                            d.qs[k] = dep.substr(1);\n                        }\n                        else if (dep[0] == '@') {\n                            // custom SELECTOR\n                            d.fields[k] = dep.substr(1)\n                        }\n                        else {\n                            // by ID\n                            d.fields[k] = '#' + dep\n                        }\n                    }\n\n                    r.dependencies = d;\n                }\n\n                return r;\n            })();\n\n            // if has customize default dynamic options function\n            if (customizeDynOptions) {\n                customizeDynOptions = eval(customizeDynOptions);\n                // call it and set new dynamic options\n                dynOptions = customizeDynOptions(dynOptions);\n            }\n\n            $self.data('dynOptionsObj', dynOptions);\n\n            // bind changes on dependencies\n            dynOptions.dependencies.forEachFields(function ($dep) {\n                $dep.change(function () {\n                    // set the default value\n                    // if is a Array object, set it,\n                    // else set as empty\n                    $self.val($self.data('default') || null).trigger(\"change\");\n                });\n            });\n\n            if (dynOptions.static) {\n                // if is a static data sources array\n                // see https://select2.github.io/examples.html#data-array\n                options.data = eval(dynOptions.static);\n            } else {\n                // remote data source\n                // see https://select2.github.io/examples.html#data-ajax\n                options.ajax = {\n                    url: function (params) {\n                        if (params.hasOwnProperty(dynOptions.idParam)) {\n                            return dynOptions.findByIdUrl || dynOptions.url;\n                        }\n                        return dynOptions.url;\n                    },\n                    dataType: 'json',\n                    delay: dynOptions.delay,\n                    data: function (params) {\n                        var r = $.extend({}, params, dynOptions.params || {});\n\n                        if (params.hasOwnProperty('term')) {\n                            delete r.term;\n                            r[dynOptions.termParam] = params.term;\n                        }\n\n                        if (params.hasOwnProperty('page')) {\n                            delete r.term;\n                            r[dynOptions.pageParam] = params.page;\n                        }\n\n                        try {\n                            delete r._query;\n                        } catch (err) {\n                        }\n\n                        dynOptions.dependencies.prepare(r);\n\n                        return r;\n                    },\n                    processResults: function (data, params) {\n                        // parse the results into the format expected by Select2\n                        // since we are using custom formatting functions we do not need to\n                        // alter the remote JSON data, except to indicate that infinite\n                        // scrolling can be used\n                        params.page = params.page || 1;\n\n                        var itemsProperty = dynOptions.itemsProperty.split('.'),\n                            total = eval('data.' + dynOptions.totalCountProperty),\n                            items = data,\n                            i;\n\n                        for (i = 0; i < itemsProperty.length; i++) {\n                            items = items[itemsProperty[i]];\n                        }\n\n                        var preparer = {\n                            options: dynOptions,\n                            data: data,\n                            params: params,\n                            prepareItem: (dynOptions.isItemTuple ?\n                                dynOptions.prepareItemTuple :\n                                dynOptions.prepareItem),\n                            prepareItems: function (e, items) {\n                                var item, newItem, parentItem = e.parentItem;\n\n                                for (var i = 0; i < items.length; i++) {\n                                    item = e.item = items[i];\n                                    e.itemIndex = i;\n\n                                    newItem = e.prepareItem(e);\n\n                                    if (newItem) {\n                                        if (newItem.children) {\n                                            e.parentItem = newItem;\n                                            newItem.children = e.prepareItems(e, newItem.children);\n                                            e.parentItem = parentItem;\n\n                                            if (!newItem.children) {\n                                                newItem = null;\n                                            }\n                                        }\n                                        else if (!newItem.id) {\n                                            newItem = null;\n                                        }\n\n                                        if (newItem && !newItem.text) {\n                                            newItem.text = '** EMPTY LABEL **';\n                                        }\n\n                                        items[i] = newItem;\n                                    }\n                                }\n\n                                items = items.filter(function (item) {\n                                    return item;\n                                });\n\n                                return items;\n                            }\n                        };\n\n                        items = preparer.prepareItems(preparer, items);\n\n                        return {\n                            results: items,\n                            params: params,\n                            pagination: {\n                                more: (params.page * dynOptions.perPage) < total\n                            }\n                        };\n                    },\n                    cache: dynOptions.cache\n                };\n\n                options.minimumInputLength = dynOptions.minInputLength;\n            }\n\n            if (options.escapeMarkup && $.type(options.escapeMarkup) == 'string') {\n                options.escapeMarkup = eval(options.escapeMarkup);\n            }\n\n            if (options.templateResult && $.type(options.templateResult) == 'string') {\n                options.templateResult = eval(options.templateResult);\n            }\n\n            if (options.templateSelection && $.type(options.templateSelection) == 'string') {\n                options.templateSelection = eval(options.templateSelection);\n            }\n        }\n\n        // if has customize default options function\n        if (customize) {\n            customize = eval(customize);\n            // call it and set new options\n            options = customize(options);\n        }\n\n        $self.select2(options);\n\n        if (isDynamic && dynOptions.value) {\n            var s = $self.data('select2');\n            var params = {};\n            params[dynOptions.idParam] = ($.isArray(dynOptions.value) ?\n                dynOptions.value.join(dynOptions.idParamSep) :\n                dynOptions.value.toString());\n\n            if (dynOptions.minInputLength > 0) {\n\n            }\n\n            if (s.dataAdapter.minimumInputLength) {\n                s.dataAdapter.minimumInputLength *= -1;\n            }\n\n            s.dataAdapter.query(params, function (results) {\n                var r = [], proccessItem;\n\n                if (s.dataAdapter.minimumInputLength < 0) {\n                    s.dataAdapter.minimumInputLength *= -1;\n                }\n\n                if ($.isArray(dynOptions.value)) {\n                    proccessItem = function(i, item) {\n                        if (map.hasOwnProperty(item.id)) {\n                            r[r.length] = item;\n                        }\n\n                        if (item.children) {\n                            $.each(item.children, proccessItem);\n                        }\n                    };\n                } else {\n                    proccessItem = function(i, item) {\n                        if (dynOptions.value == item.id) {\n                            r[r.length] = item;\n                        }\n\n                        if (item.children) {\n                            $.each(item.children, proccessItem);\n                        }\n                    };\n                }\n\n                var map = {};\n\n                $.each(dynOptions.value, function (i, value) {\n                    if (value !== null) {\n                        map[value] = value;\n                    }\n                });\n\n                $.each(results.results, proccessItem);\n\n                $.each(r, function(i, value) {\n                    s.selection.container.trigger('select', {data: value});\n                });\n            });\n        }\n    });\n});\n","window.Admin.Components\n    .add('ckeditor', function() {\n        switchOn_handler = function (textarea_id, params) {\n            CKEDITOR.disableAutoInline = true;\n\n            var params = $.extend({}, params);\n\n            return CKEDITOR.replace(textarea_id, params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy()\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.insertText(data);\n                    break;\n                case 'changeHeight':\n                    editor.resize('100%', data);\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'ckeditor',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    })\n    .add('tinymce', function() {\n        switchOn_handler = function (textarea_id, params) {\n            var params = $.extend({\n                selector:'#'+textarea_id\n            }, params);\n\n\n            return tinymce.init(params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy();\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.insertContent(data);\n                    break;\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'tinymce',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    }).add('simplemde', function() {\n        switchOn_handler = function (textarea_id, params) {\n            var params = $.extend({\n                element: $(\"#\"+textarea_id)[0]\n            }, params);\n\n\n            return new SimpleMDE(params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy();\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.codemirror.replaceSelection(data);\n                    break;\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'simplemde',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    });\n\n\n$(function () {\n    var SITE_URL = $('meta[name=\"site-url\"]').attr('content');\n\n    if (!SITE_URL) {\n        throw \"[laravelrus/SleepingOwlAdmin] The header meta 'site-url' \" +\n            \"does not exists or value is empty.\";\n    }\n\n    $.ajaxSetup({\n        beforeSend: function(jqXHR, settings) {\n            var part = settings.url.substr(0, SITE_URL.length);\n            \n            if (part == SITE_URL) {\n                jqXHR.setRequestHeader('X-CSRF-TOKEN',\n                    window.Admin.Settings.token);\n            }\n        }\n    });\n\n    $('form[data-type=\"display-actions\"]').on('submit', function(e) {\n        var $form = $(this),\n            $btn = $(e.target.action),\n            $checkboxes = $('.adminCheckboxRow').filter(':checked');\n\n        if (!$checkboxes.length) {\n            e.preventDefault();\n        }\n\n        this.action = $btn.data('action');\n        this.method = $btn.data('method');\n\n        $checkboxes.each(function () {\n            $form.append('<input type=\"hidden\" name=\"id[]\" value=\"' + $(this).val() + '\" />');\n        });\n    });\n\n    $('.inline-editable').editable();\n\n    window.Admin.Components.init();\n    window.Admin.Controllers.call();\n});","$(function () {\n    $('.imageUploadMultiple').each(function (index, item) {\n        var $item = $(item);\n        var $group = $item.closest('.form-group');\n        var $innerGroup = $item.find('.form-group');\n        var $errors = $item.find('.errors');\n        var $input = $item.find('.imageValue');\n        var flow = new Flow({\n            target: $item.data('target'),\n            testChunks: false,\n            chunkSize: 1024 * 1024 * 1024,\n            query: {\n                _token: $item.data('token')\n            }\n        });\n        var updateValue = function () {\n            var values = [];\n            $item.find('img[data-value]').each(function () {\n                values.push($(this).data('value'));\n            });\n            $input.val(values.join(','));\n        };\n        flow.assignBrowse($item.find('.imageBrowse'));\n        flow.on('filesSubmitted', function (file) {\n            flow.upload();\n        });\n        flow.on('fileSuccess', function (file, message) {\n            flow.removeFile(file);\n\n            $errors.html('');\n            $group.removeClass('has-error');\n\n            var result = $.parseJSON(message);\n\n            $innerGroup.append($($('#thumbnail_template').html()).find('img').attr('src', result.url).attr('data-value', result.value));\n            updateValue();\n        });\n        flow.on('fileError', function (file, message) {\n            flow.removeFile(file);\n\n            var response = $.parseJSON(message);\n            var errors = '';\n            $.each(response, function (index, error) {\n                errors += '<p class=\"help-block\">' + error + '</p>'\n            });\n            $errors.html(errors);\n            $group.addClass('has-error');\n        });\n        $item.on('click', '.imageRemove', function (e) {\n            e.preventDefault();\n            $(this).closest('.imageThumbnail').remove();\n            updateValue();\n        });\n\n        $innerGroup.sortable({\n            onUpdate: function () {\n                updateValue();\n            }\n        });\n    });\n});"],"sourceRoot":"/source/"}